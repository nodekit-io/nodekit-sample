module.exports = { contents : "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _mobxReact = require('mobx-react');\n\nrequire('./App.css');\n\nvar _offgridComponents = require('offgrid-components');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * OffGrid Talkie\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               * Copyright (c) 2017 OffGrid Networks. All Rights Reserved.\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        { className: 'App' },\n        _react2.default.createElement(_offgridComponents.OGNAppBar, null),\n        _react2.default.createElement(\n          _offgridComponents.OGNSideBar,\n          null,\n          _react2.default.createElement(\n            'ul',\n            null,\n            _react2.default.createElement(\n              'li',\n              { className: 'ogn-sidebar-item App-sidebar-heading' },\n              'Connected'\n            ),\n            _react2.default.createElement(\n              'li',\n              { className: 'ogn-sidebar-item App-sidebar-item' },\n              _react2.default.createElement(\n                'a',\n                { href: '#' },\n                'Shout'\n              )\n            )\n          )\n        ),\n        _react2.default.createElement(_offgridComponents.OGNConversationSurface, { id: 'chat' })\n      );\n    }\n  }]);\n\n  return App;\n}(_react.Component);\n\nexports.default = (0, _mobxReact.inject)('store')((0, _mobxReact.observer)(App));", 
dependencies : ["react","mobx-react","./App.css","offgrid-components"], 
sourceMap : "{\"version\":3,\"sources\":[\"App.js\"],\"names\":[\"App\"],\"mappings\":\";;;;;;;;AAOA;;;;AACA;;AACA;;AACA;;;;;;;;+eAVA;;;;;;;IAYMA,G;;;;;;;;;;;6BAEK;AACP,aACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE,yEADF;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,gBAAI,WAAU,sCAAd;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAI,WAAU,mCAAd;AAAkD;AAAA;AAAA,kBAAG,MAAK,GAAR;AAAA;AAAA;AAAlD;AAFF;AADF,SAFF;AAQE,mFAAwB,IAAG,MAA3B;AARF,OADF;AAYD;;;;;;kBAGY,uBAAO,OAAP,EAAgB,yBAASA,GAAT,CAAhB,C\",\"file\":\"App.js\",\"sourcesContent\":[\"/*\\n* OffGrid Talkie\\n*\\n* Copyright (c) 2017 OffGrid Networks. All Rights Reserved.\\n* SEE LICENSE\\n*/\\n\\nimport React, { Component } from 'react';\\nimport { inject, observer } from 'mobx-react';\\nimport './App.css';\\nimport { OGNAppBar, OGNSideBar, OGNConversationSurface } from 'offgrid-components'\\n\\nclass App extends Component {\\n  \\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <OGNAppBar />\\n        <OGNSideBar >\\n          <ul>\\n            <li className=\\\"ogn-sidebar-item App-sidebar-heading\\\">Connected</li>\\n            <li className=\\\"ogn-sidebar-item App-sidebar-item\\\"><a href=\\\"#\\\">Shout</a></li>\\n          </ul>\\n        </OGNSideBar>\\n        <OGNConversationSurface id=\\\"chat\\\" />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default inject('store')(observer(App))\\n\"]}",
headerContent : undefined, 
mtime : 1485973734000
};